# This file is autogenerated by the aliases tool.
# For more info about aliases type `aliases --help`
# or visit https://github.com/sebglazebrook/aliases

---
a:
  command: aliases
b:
  command: bundle
be:
  command: bundle exec
titleize:
  command: sed 's/[^ _-]*/\u&/g'
c:
  command: clear
"cat-lines":
  command: "paste -d\" \""
cp:
  command: "command -p cp -i"
ctop:
  command: "docker run -ti --name ctop --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest"
cwb:
  command: "git branch | grep \"*\" | awk '{print $2}'"
cwd:
  command: "pwd | tr -d \"\\r\\n\" | pbcopy"
d:
  command: docker
dc:
  command: "docker-compose"
dm:
  command: "docker-machine"
"docker-use-local":
  command: "source <(docker-machine env local)"
"docker-use-seb":
  command: "source <(docker-machine env seb-dev)"
fetch:
  command: git fetch
ff:
  command: fuzz
"find-accessed-last-hour":
  command: "find . -amin -60"
"find-changed-last-hour":
  command: "find . -cmin -60"
"find-largest-files":
  command: "find . -type f -exec command -p ls -s {} \\; | sort -n -r | head -5"
"find-modified-last-hour":
  command: "find . -mmin -60"
first:
  command: "head -n 1"
bar:
  command: echo "hello from your home"
foobar:
  command: "read piped_input; bash -c \\\"$0\" $piped_input"
fuzzhi:
  command: "arg=$(fzf) && $0 $arg && history -s $0 $arg && history -w ~/.bash_history"
g:
  command: git
ga:
  command: "git add -p"
gc:
  command: "git commit -v"
gco:
  command: "git checkout -p"
gd:
  command: git diff
gdc:
  command: "git diff --cached"
"git-delete-merged":
  command: "git branch --merged | grep -v \"\\*\" | grep -v master | xargs -n 1 git branch -d"
"git-find-commit-containing-text":
  command: "git log -G $0"
"git-find-commit-message-containing":
  command: "git log --grep=word"
"git-find-commit-that-introduced-string":
  command: "git log -S $0 --format=\"%H\" --reverse | head -n 1 | xargs --no-run-if-empty git show"
"git-shallow-clone":
  command: "git clone -n $0 --depth 1"
"git-show-files":
  command: "git show --name-only"
"git-undo-last-commit":
  command: "git reset --soft HEAD~"
gl:
  command: "git log --pretty=oneline -n 20 --graph --abbrev-commit"
gp:
  command: git push
gpf:
  command: "git push --force-with-lease"
gpl:
  command: "git pull --rebase"
gpsu:
  command: "git push --set-upstream origin $(cwb)"
gpu:
  command: "git push -u origin HEAD"
grab:
  command: "awk -v position=$0 '{print $position}'"
gs:
  command: "git status -sb"
kumo:
  command: /Users/sebastianglazebrook/src/kumo/bin/kumo
l:
  command: "command -p ls"
la:
  command: "command -p ls"
last:
  command: "tail -n 1"
ll:
  command: "ls -la"
ln:
  command: "command -p ln -i"
ls:
  command: "command -p ls"
lsd:
  command: "command -p ls"
mux:
  command: "tmux -2"
n:
  command: v
pasta:
  command: git checkout master
rainbow:
  command: "for i in {0..255};do echo  \"$(tput setaf $i)RAINBOW! $i\" ;done"
"reset-colors":
  command: tput sgr0
rusti:
  command: "docker-use-local && docker run -ti rusti"
second:
  command: "tail -n +2 | head -n 1"
"set-green-text":
  command: tput setaf 2
"set-term-colors":
  command: "reset-colors"
"ssh-prod-rabbit":
  command: "ssh deploy@ec2-54-166-249-56.compute-1.amazonaws.com"
split:
  command: tmux split-window
untar:
  command: tar xvf
v:
  command: "docker run -v \"${PWD}\":/app -ti sebglazebrook/my-neovim vim"
"vim-replace":
  command: "ag -l \"$0\" && vim -c \"bufdo %s/$0/$1/gc\" $(ag -l \"$0\")"
vsplit:
  command: tmux split-window -h
which:
  command: "type -p"
yelp:
  command: "aliases list --directory ${PWD}"
sqlectron:
  command: "docker run -ti -v ~/.sqlectron.json:/root/.sqlectron.json sebglazebrook/sqlectron sh"
irb:
  command: "docker run -ti -v ${PWD}:/code ruby:alpine irb"
kubectl:
  command: "docker run --rm -ti -v ~/.kube:/root/.kube -e AWS_DEFAULT_REGION -e AWS_SECRET_ACCESS_KEY -e AWS_ACCESS_KEY_ID sebglazebrook/kubectl ./kubectl"
spacemacs:
  command: 'docker run -ti --rm --name spacemacs -e DISPLAY="unix$DISPLAY" -e UNAME="spacemacser" -e UID="1000" -e TZ=$(cat /etc/timezone) -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v /etc/localtime:/etc/localtime:ro -v /etc/machine-id:/etc/machine-id:ro  -v /var/run/dbus:/var/run/dbus  -v ${PWD}:/mnt/workspace spacemacs/emacs25:develop'
ruby:
  command: docker run -it -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) ruby:alpine
node:
  command: docker run -ti -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) node:latest
npm:
  command: docker run -ti -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) node:latest npm
