# This file is autogenerated by the aliases tool.
# For more info about aliases type `aliases --help`
# or visit https://github.com/sebglazebrook/aliases

---
a:
  command: aliases
b:
  command: bundle
bar:
  command: echo "hello from your home"
be:
  command: bundle exec
c:
  command: clear
"cat-lines":
  command: "paste -d\" \""
cargo-docker:
  command: "docker run -ti -v ${PWD}:/code -w /code -P -e USER=${USER}  -u $(id -u):$(id -g) sebglazebrook/rust-stable:latest cargo"
cp:
  command: "command -p cp -i"
ctop:
  command: "docker run -ti --name ctop --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest"
cwb:
  command: "git branch | grep \"*\" | awk '{print $2}'"
  quiet: true
cwd:
  command: "pwd | tr -d \"\\r\\n\" | pbcopy"
d:
  command: docker
diff:
  command: git diff --no-index --color-words
dc:
  command: "docker-compose"
dm:
  command: "docker-machine"
"docker-use-local":
  command: "source <(docker-machine env local)"
"docker-use-seb":
  command: "source <(docker-machine env seb-dev)"
fetch:
  command: git fetch
ff:
  command: fuzz
"find-accessed-last-hour":
  command: "find . -amin -60"
"find-changed-last-hour":
  command: "find . -cmin -60"
"find-largest-files":
  command: "find . -type f -exec command -p ls -s {} \\; | sort -n -r | head -5"
"find-modified-last-hour":
  command: "find . -mmin -60"
first:
  command: 'head -n $(if [ $0 = "bash" ]; then echo 1; else echo $0; fi)'
foobar:
  command: "read piped_input; bash -c \\\"$0\" $piped_input"
fs:
  command: "du -sbh .[^.]* *"
fuzzhi:
  command: "arg=$(fzf) && $0 $arg && history -s $0 $arg && history -w ~/.bash_history"
g:
  command: git
ga:
  command: "git add -p"
gc:
  command: "git commit -v"
gco:
  command: "git checkout -p"
gd:
  command: git diff
gdc:
  command: "git diff --cached"
"git-delete-merged":
  command: "git branch --merged | grep -v \"\\*\" | grep -v master | xargs -n 1 git branch -d"
"git-find-commit-containing-text":
  command: "git log -G $0"
"git-find-commit-message-containing":
  command: "git log --grep=word"
"git-find-commit-that-introduced-string":
  command: "git log -S $0 --format=\"%H\" --reverse | head -n 1 | xargs --no-run-if-empty git show"
"git-shallow-clone":
  command: "git clone -n $0 --depth 1"
"git-show-files":
  command: "git show --name-only"
"git-undo-last-commit":
  command: "git reset --soft HEAD~"
"git-log-commits-diff-master":
  command: "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative master..$(cwb)"
git-diff-merged:
  command: "git show $0 | grep 'Merge:' | awk 'BEGIN { ORS=\" \"  }; {print $2; print $3}' | xargs git diff"
git-fetch:
  command: "git fetch --all --prune"
git-diff-branch:
  command: "git diff $(git log master | first | grab 2) $(git log | first | grab 2)"
git-stash-preview:
  command: "git stash "
git-clean-origin:
  command: "git remote prune origin"
git-first-commit-on-branch:
  command: "git log master..$(cwb) --pretty=%H | last"
git-first-commit-off-branch:
  command: "git log --max-count 1 --pretty=%H $(git-first-commit-on-branch)^1"
git-rebase-branch:
  command: "git rebase -i $(git-first-commit-off-branch)"
gl:
  command: "git log --pretty=oneline --max-count 20 --graph --abbrev-commit"
gp:
  command: git push
  backout_seconds: 2
  quiet: true
gpf:
  command: "git push --force-with-lease"
gpl:
  command: "git pull --rebase"
gpsu:
  command: "git push --set-upstream origin $(cwb)"
gpu:
  command: "git push -u origin HEAD"
grab:
  command: "awk -v position=$0 '{print $position}'"
gs:
  command: "git status -sb"
irb:
  command: "docker run -ti -v ${PWD}:/code ruby:alpine irb"
kubectl:
  command: "docker run --rm -ti -v ~/.kube:/root/.kube -e AWS_DEFAULT_REGION -e AWS_SECRET_ACCESS_KEY -e AWS_ACCESS_KEY_ID sebglazebrook/kubectl ./kubectl"
kumo:
  command: /Users/sebastianglazebrook/src/kumo/bin/kumo
l:
  command: "ls"
last:
  command: 'tail -n $(if [ $0 = "bash" ]; then echo 1; else echo $0; fi)'
ll:
  command: "ls -lah"
ln:
  command: "command -p ln -i"
mkd:
  command: mkdir -p "$@" && cd "$@"
mux:
  command: "tmux -2"
n:
  command: v
node:
  command: "docker run -ti -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) node:latest"
npm:
  command: "docker run -ti -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) node:latest npm"
pasta:
  command: git checkout master
pkill:
  command: ps -ef | grep $0 | first | grab 2 | xargs kill
port-scan-address:
  command: nmap $0
port-process-list:
  command: netstat -tulpn
process-listening-on-port:
  command: sudo lsof -i :$0
rainow:
  command: "for i in {0..255};do echo  \"$(tput setaf $i)RAINBOW! $i\" ;done"
"reset-colors":
  command: tput sgr0
ruby:
  command: "docker run -it -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) ruby:alpine"
rusti:
  command: "docker-use-local && docker run -ti rusti"
reverse-dns-lookup:
  command: "dig -x"
second:
  command: "tail -n +2 | head -n 1"
"set-green-text":
  command: tput setaf 2
"set-term-colors":
  command: "reset-colors"
subscribe:
  command: "cd /tmp/data && logs $0 | $1"
spacemacs:
  command: "docker run -ti --rm --name spacemacs -e DISPLAY=\"unix$DISPLAY\" -e UNAME=\"spacemacser\" -e UID=\"1000\" -e TZ=$(cat /etc/timezone) -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v /etc/localtime:/etc/localtime:ro -v /etc/machine-id:/etc/machine-id:ro  -v /var/run/dbus:/var/run/dbus  -v ${PWD}:/mnt/workspace spacemacs/emacs25:develop"
split:
  command: "tmux split-window"
sqlectron:
  command: "docker run -ti -v ~/.sqlectron.json:/root/.sqlectron.json sebglazebrook/sqlectron sh"
titleize:
  command: "sed 's/[^ _-]*/\\u&/g'"
take:
  command: "tail -n +$0 | head -n 1"
targz:
  command: tar -cvf --exclude=".DS_Store" $0
untar:
  command: tar xvf
v:
  command: "docker run -v \"${PWD}\":/app -ti sebglazebrook/my-neovim vim"
"vim-replace":
  command: "ag -l \"$0\" && vim -c \"bufdo %s/$0/$1/gc\" $(ag -l \"$0\")"
vsplit:
  command: "tmux split-window -h"
which:
  command: "type -p"
watch-dir:
  command: "while inotifywait --exclude .swp --exclude .git -e modify -r .; do $@ ; done;"
yarn:
  command: "docker run -ti -v ${PWD}:/code -w /code -P -u $(id -u):$(id -g) kkarczmarczyk/node-yarn yarn"
yelp:
  command: "aliases list --directory ${PWD}"
todos-on-branch:
  command: git status --short | awk '{ print $2 }' | xargs rg -A 5 -B 5 TODO
vtop:
  command: docker run -it --rm --pid host hvindin/centos7-vtop
htop:
  command: docker run -it --pid=host jonbaldie/htop
